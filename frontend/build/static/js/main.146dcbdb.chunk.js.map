{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstant.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","components/Header.js","actions/userAction.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","screens/HomeScreen.js","actions/productActions.js","screens/ProductScreen.js","actions/cartAction.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","reducer","combineReducers","productList","state","products","action","type","Loading","payload","error","productDetails","product","reviews","cart","cartItems","item","existItem","find","x","map","filter","userLogin","loading","userInfo","userRegister","userDetails","user","userUpdateProfile","success","intialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","dispatch","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","name","Item","onClick","removeItem","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","HomeScreen","useEffect","a","axios","get","data","response","message","sm","md","lg","xl","ProductScreen","history","match","useState","qty","setQty","params","Image","alt","fluid","ListGroup","description","countInStock","Form","Control","onChange","e","target","Array","keys","Button","push","disabled","addToCart","getState","setItem","stringify","CartScreen","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","config","headers","post","login","Group","controlId","Label","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","Authorization","token","put","updateUserProfile","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.146dcbdb.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const  CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport  { composeWithDevTools }  from 'redux-devtools-extension'\r\nimport { \r\n    productListReducer, \r\n    productDetailsReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { \r\n    userLoginReducer, \r\n    userRegisterReducer, \r\n    userDetailsReducer, \r\n    userUpdateProfileReducer \r\n} from './reducers/userReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse\r\n    (localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n? JSON.parse(localStorage.getItem('userInfo'))\r\n: null\r\n \r\nconst intialState = {\r\n    cart: { cartItems: cartItemsFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    intialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\n\r\nexport default store","import { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL, \r\n } from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { Loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { Loading: false, products: action.payload }\r\n        case PRODUCT_LIST_FAIL:\r\n             return { Loading: false, error: action.payload } \r\n        default:\r\n            return state\r\n    }\r\n} \r\n\r\n\r\nexport const productDetailsReducer = (\r\n    state = { product: { reviews: [] } }, \r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { Loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { Loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n             return { Loading: false, error: action.payload } \r\n        default:\r\n            return state\r\n    }\r\n} ","import { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = {cartItems: [] }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem){\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            }else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n            }\r\n        default:\r\n           return state\r\n    }\r\n}","import { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET\r\n } from '../constants/userConstant'\r\n\r\nexport const  userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return{ loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n       case USER_LOGOUT:\r\n           return {}\r\n        default:\r\n           return state;\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS: \r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch(action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS: \r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    switch(action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS: \r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { logout } from '../actions/userAction'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return ( \r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n               <Container>\r\n                   <LinkContainer to='/'>\r\n                     <Navbar.Brand>ProShop</Navbar.Brand>\r\n                   </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                        <LinkContainer to='/cart'>\r\n                            <Nav.Link>\r\n                                <i className='fas fa-shopping-cart'></i>Cart\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                        {userInfo ? (\r\n                            <NavDropdown title={userInfo.name} id='username'>\r\n                                <LinkContainer to='/profile'>\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <NavDropdown.Item onClick={logoutHandler}>\r\n                                    Logout\r\n                                </NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        ) : <LinkContainer to='/login'>\r\n                            <Nav.Link>\r\n                                <i className='fas fa-user'></i>Sing In\r\n                            </Nav.Link>\r\n                            </LinkContainer>\r\n                        }\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import axios from 'axios'\r\nimport { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET\r\n } from '../constants/userConstant'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            'api/users/login', \r\n            { email, password },\r\n            config\r\n            )\r\n\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: data\r\n            })\r\n\r\n         localStorage.setItem('userInfo', JSON.stringify(data))   \r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            'api/users', \r\n            { name, email, password },\r\n            config\r\n            )\r\n\r\n            dispatch({\r\n                type: USER_REGISTER_SUCCESS,\r\n                payload: data,\r\n            })\r\n\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: data,\r\n            })\r\n\r\n         localStorage.setItem('userInfo', JSON.stringify(data))   \r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState() \r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n            dispatch({\r\n                type: USER_DETAILS_SUCCESS,\r\n                payload: data,\r\n            })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState() \r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n            dispatch({\r\n                type: USER_UPDATE_PROFILE_SUCCESS,\r\n                payload: data,\r\n            })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n \r\n\r\n\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return ( \r\n        <footer> \r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>Copyright &copy; ProShop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n        )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}}\r\n                className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825',\r\n}\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n}\r\n\r\nexport default Rating;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card>\r\n            <Link to={`/product/${product._id}`}> \r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'>\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n                   <Rating\r\n                        value={product.rating}\r\n                        text={`${product.numReviews} reviews`}\r\n                   />\r\n                </Card.Text>\r\n\r\n                <Card.Text as='h3'>\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\n \r\n\r\nexport default Product; "," import React from 'react'\r\n import { Alert } from 'react-bootstrap'\r\n \r\n const Message = ({ variant, children }) => {\r\n     return <Alert variant={variant}>{children}</Alert>\r\n }\r\n \r\n Message.defaultProps = {\r\n     variant: 'info'\r\n }\r\n\r\n export default Message\r\n ","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\n\r\nconst Loader = () => {\r\n    return (\r\n       <Spinner \r\n           animation='border' \r\n           role='status' \r\n           style={{\r\n            width: '100px',\r\n            height: '100px',\r\n            margin: 'auto',\r\n            display: 'block'\r\n         }}\r\n       >\r\n       <span className='sr-only'></span>\r\n       </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst HomeScreen = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    useEffect(() => {\r\n       dispatch(listProducts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <h1>Latest Product</h1>\r\n            {loading ? (\r\n             <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message> \r\n             ) : (\r\n               <Row>\r\n                    {products.map(product => (\r\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                        <Product product={product} />\r\n                        </Col>\r\n                    ))}\r\n                </Row>)}\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen;","import axios from 'axios'\r\nimport { \r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_LIST_FAIL, \r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL} from '../constants/productConstants'\r\n\r\n\r\n    export const listProducts = () => async (dispatch) => {\r\n        try {\r\n            dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n            const { data } = await axios.get('/api/products')\r\n\r\n            dispatch({\r\n                type: PRODUCT_LIST_SUCCESS,\r\n                payload: data\r\n            })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: PRODUCT_LIST_FAIL,\r\n                payload: \r\n                    error.response  && error.response.data.message\r\n                     ? error.response.data.message\r\n                     :error.message\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    export const listProductDetails = (id) => async (dispatch) => {\r\n        try {\r\n            dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n            dispatch({\r\n                type: PRODUCT_DETAILS_SUCCESS,\r\n                payload: data\r\n            })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: PRODUCT_DETAILS_FAIL,\r\n                payload: \r\n                    error.response  && error.response.data.message\r\n                     ? error.response.data.message\r\n                     :error.message\r\n            })\r\n        }\r\n\r\n    }","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Form, Image, ListGroup, Card, Button } from 'react-bootstrap'\r\nimport Rating from  '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n    listProductDetails\r\n  } from '../actions/productActions'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n    \r\n    useEffect(() => {\r\n      dispatch(listProductDetails(match.params.id))\r\n     }, [dispatch, match])\r\n\r\n     const addToCartHandler = () => {\r\n         history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n     }\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>\r\n                Go Back\r\n            </Link>\r\n        {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n           \r\n           <Row>\r\n            <Col md={6}>\r\n                <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h3>{product.name}</h3>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Rating \r\n                            value={product.rating}\r\n                            text={`${product.numReviews} reviews`}\r\n                        />\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                    <ListGroup.Item>Discription: {product.description}</ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Price</Col>\r\n                                <Col>\r\n                                    <strong>${product.price}</strong>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Status</Col>\r\n                                <Col>\r\n                                   {product.countInStock > 0 ?'In stock' : 'Out of Stock'}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        {product.countInStock > 0 && (\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Qty</Col>\r\n                                    <Col>\r\n                                    <Form.Control as='select' value={qty} onChange={(e) => \r\n                                    setQty(e.target.value)}>\r\n                                   \r\n                                    {[...Array(product.countInStock).keys()].map((x) => (\r\n                                     <option  key={x + 1} value={x + 1}>\r\n                                         {x + 1}\r\n                                     </option>   \r\n                                    ))}\r\n                                    </Form.Control>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        )}\r\n\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                onClick={addToCartHandler}\r\n                                className='btn-block' \r\n                                type='button'\r\n                                disabled={product.countInStock === 0}\r\n                                >\r\n                                Add To Cart\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n        )}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        },\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartAction'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n     \r\n    const removeFromCartHandler = (id) => {\r\n       dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n            <h1>Shopping Cart</h1>\r\n               {cartItems.length === 0 ? (\r\n               <Message>\r\n                   Your cart is empty <Link to='/'>GO Back</Link>\r\n                   </Message> \r\n                   ) : (\r\n                   <ListGroup variant='flush'>\r\n                       {cartItems.map(item => (\r\n                           <ListGroup.Item key={item.product}>\r\n                               <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control \r\n                                            as='select' \r\n                                            value={item.qty} \r\n                                            onChange={(e) => dispatch(addToCart(item.product,\r\n                                                Number(e.target.value)))}\r\n                                        >\r\n                                    \r\n                                        {[...Array(item.countInStock).keys()].map((x) => (\r\n                                        <option  key={x + 1} value={x + 1}>\r\n                                            {x + 1}\r\n                                        </option>   \r\n                                        ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button \r\n                                            type='button' \r\n                                            variant='light' \r\n                                            onClick={() => removeFromCartHandler(item.product)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                              </Row>\r\n                           </ListGroup.Item>\r\n                       ))}\r\n                   </ListGroup>\r\n               )}\r\n            </Col>\r\n            <Col md={4}>\r\n                 <Card>\r\n                     <ListGroup.Item>\r\n                        <h2>\r\n                            Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                            items\r\n                         </h2>\r\n                        ${cartItems\r\n                        .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                        .toFixed(2)}\r\n                     </ListGroup.Item>\r\n                     <ListGroup.Item>\r\n                         <Button \r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                         >\r\n                               Proceed To Checkout\r\n                         </Button>\r\n                     </ListGroup.Item>\r\n                 </Card>                           \r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n       <Container>\r\n           <Row className='justify-content-md-center'>\r\n               <Col xs={12} md={6}>\r\n                 {children}\r\n               </Col>\r\n           </Row>\r\n       </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userAction'\r\n\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const  dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign in</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter email'\r\n                            value= {email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value= {password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                         Sign In\r\n                    </Button>\r\n                </Form>\r\n\r\n                <Row className='py-3'>\r\n                    <Col>\r\n                        New Customer?{' '}\r\n                        <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                            Register\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userAction'\r\n\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const  dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector((state) => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n       if(password !== confirmPassword) {\r\n           setMessage('Password do not match')\r\n       } else {\r\n           dispatch(register(name, email, password))\r\n       }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value= {name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter email'\r\n                            value= {email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value= {password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                     <Form.Group controlId='confirmpassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value= {confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                         Register\r\n                    </Button>\r\n                </Form>\r\n\r\n                <Row className='py-3'>\r\n                    <Col>\r\n                         Have an Account?{' '}\r\n                        <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                            Login\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userAction'\r\n\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const  dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if(!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n       if(password !== confirmPassword) {\r\n           setMessage('Password do not match')\r\n       } else {\r\n           // DISPATCH UPDATE PROFILE\r\n           dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n       }\r\n    }\r\n\r\n    return <Row>\r\n        <Col md={3}>\r\n        <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {success && <Message variant='success'>Profile Updated</Message>}\r\n            {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value= {name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter email'\r\n                            value= {email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value= {password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                     <Form.Group controlId='confirmpassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value= {confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                         Update\r\n                    </Button>\r\n                </Form>\r\n\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>My Orders</h2>\r\n        </Col>\r\n    </Row>\r\n}\r\n\r\nexport default ProfileScreen\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n            <Route path='/login' component={LoginScreen} />\n            <Route path='/register' component={RegisterScreen} />\n            <Route path='/profile' component={ProfileScreen} />\n            <Route path='/product/:id' component={ProductScreen} />\n            <Route path='/cart/:id?' component={CartScreen} />\n            <Route path='/' component={HomeScreen} exact />\n            {/* doubt    path='/product/:id' \n            */}\n         </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}